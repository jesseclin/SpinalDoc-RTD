FAQ
===

SpinalHDL で生成された RTL のオーバーヘッドは、人間が作成した VHDL/Verilog と比較してどれくらいですか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

オーバーヘッドはゼロ。 SpinalHDL は、人間が書いた VHDL/Verilog と同じ HDL 構成要素を生成します。
SpinalHDL を使用することで、生成された実装に不要なアーティファクトが追加されることはありません。
つまり、生成された HDL と手書きの HDL を比較した場合、オーバーヘッドはゼロです。

Scala/SpinalHDL 言語は強力で表現力に優れているため、複雑なハードウェア設計でもより簡潔な記述が可能になります。 
また、厳格な型安全と強力な HDL 安全パラダイムにより、コード行数を減らし、
より少ないバグでより多くの機能を実現できます。

SpinalHDL は HLS (High-Level Synthesis) アプローチを採用しておらず、HLS ソリューション自体でもありません。 
その目的は、任意のコードを RTL に変換することではなく、RTL を記述するための強力な言語を提供し、
設計者が作業しているレベルで抽象化レベルを引き上げ、コードの再利用性を高めることです。


SpinalHDL が将来サポートされなくなったらどうなりますか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SpinalHDL のサポートと持続可能性については、二面性があります。

1. EDA ツールとの互換性: SpinalHDL は VHDL/Verilog ファイルを生成するため、
   何十年にもわたって多くの EDA ツールでサポートされることが保証されます。
   これは強力な利点であり、長期的なプロジェクトの安定性を確保します。

2. オープンソースによる持続可能性: SpinalHDL は完全なオープンソースプロジェクトです。
   そのため、もしバグが発生して公式サポートが終了しても、致命的な状況になるわけではありません。
   単純な問題であれば、数時間かけて自分で修正することも可能です。

3. さらに、商用 EDA ベンダーの場合、問題の修正や新機能の追加に時間がかかることも考慮する必要があります。
   SpinalHDL を使用することで、コストと時間の節約を実現し、さらにあなたの貢献によってコミュニティ全体を活性化させ、
   オープンソースとしての SpinalHDL の未来をより強固なものにすることができます。


SpinalHDL は生成された VHDL/verilog にコメントを保持しますか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

いいえ、SpinalHDL は生成された VHDL/Verilog ファイルにコメントを残しません。
これらの生成ファイルは、ネットリスト（回路の接続リスト）として扱われるため、
コメントは不要とみなされます。
例えるなら、C 言語のコードをコンパイルしたときに、
生成されたアセンブリコードに元のCコードのコメントが残っていないのと同じです。


SpinalHDL は大規模プロジェクトまでスケールアップできますか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

はい、いくつかの実験が行われましたが、キャッシュを備えた数百の 3KLUT CPU の生成には約 12 秒かかるようです。
これは、この種の設計のシミュレーションまたは合成に必要な時間と比較すると、驚くほど短い時間です。


SpinalHDL が生まれた経緯
~~~~~~~~~~~~~~~~~~~~~~~~

SpinalHDL は、2014 年 12 月から 2016 年 4 月までは個人的な趣味プロジェクトとしてスタートしました。
しかし、2016 年 4 月からは 1 人がフルタイムで開発に取り組んでおり、
他にも定期的にプロジェクトに貢献するコミュニティメンバーも存在しています。

VHDL/Verilog/SystemVerilog があるのに、なぜ新しい言語を開発するのでしょうか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:ref:`Foreword` はこのトピックに特化しています。

SpinalHDL の未リリース バージョン (ただし git でコミットされている) を使用するにはどうすればよいですか?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

まだクローンを作成していない場合は、まず、リポジトリを取得する必要があります:

.. code-block:: sh

   git clone --depth 1 -b dev https://github.com/SpinalHDL/SpinalHDL.git
   cd SpinalHDL

上記のコマンドでは、 ``dev`` を必要なブランチの名前に置き換えることができます。
チェックアウトへ。 ``--depth 1``を指定すると、リポジトリ履歴のダウンロードが防止されます。


次に、取得したディレクトリにあるコードをそのままパブリッシュします。

.. code-block:: sh

   sbt clean '++ 2.12.13' publishLocal

ここで ``2.12.13`` は使用するScalaのバージョンです。最初の 2 つの数値は、
プロジェクトで使用されているバージョンのいずれか。
これは ``build.sbt`` 内および/または ``build.sc``にあります。
および/または ``build.sc``。


.. code-block:: scala

   ThisBuild / scalaVersion := "2.12.16" // in build.sbt
   // or
   def scalaVersion = "2.12.16" // in build.sc

次に、プロジェクトで、指定されている SpinalHDL バージョンを更新します。
``build.sbt`` または ``build.sc``: バージョンの代わりに ``dev`` に設定する必要があります
番号。

.. code-block:: scala

   val spinalVersion = "1.7.3"
   // becomes
   val spinalVersion = "dev"

.. note::

   ここでは、以前にチェックアウトしたブランチに関係なく、常に ``dev`` です。
